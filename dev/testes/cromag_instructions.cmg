;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Arquivo para teste das instruções da
;; Máquina Cromag no Hidra
;;
;; RESULTADO ESPERADO:
;; A partir de 200, cada teste deve escrever o
;; valor 255 (0xFF) na memória.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test00: ORG, DB
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    ORG    200
Test00:    DB    255

;; Labels para os outros testes:

Test01:    DB    1
Test02:    DB    1
Test03:    DB    1
Test04:    DB    1
Test05:    DB    1
Test06:    DB    1
Test07:    DB    1
Test08:    DB    1
Test09:    DB    1
Test10:    DB    1
Test11:    DB    1
Test12:    DB    1
Test13:    DB    1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Constantes:
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    ORG    170

EndInd:    DB    Val255
Val000:    DB    0
Val007:    DB    7
Val014:    DB    14
Val028:    DB    28
Val063:    DB    63
Val121:    DB    121
Val127:    DB    127
Val128:    DB    128
Val224:    DB    224
Val249:    DB    249
Val251:    DB    251
Val252:    DB    252
Val255:    DB    255

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test01: LDR, STR, endereçamento direto
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    ORG    0
    
    LDR    200    ; (Endereço de Test00)
    STR    201    ; Copia o valOR    A 255 de Test00 para Test01

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test02: Labels
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDR    Val255
    STR    Test02    ; Copia o valOR    A 255 para Test02

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test03: Endereçamento indireto
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDR    Val000
    LDR    EndInd,I
    STR    Test03

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test04: ADD (com overflow)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDR    Val224
    ADD    Val224    ; 224 + 224 = 192 (overflow)
    ADD    Val063    ; 192 + 63 = 255
    STR    Test04

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test05: OR
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDR    Val007    ; 7 = 0b00000111
    OR     Val028    ; 28 = 0b00011100 | 7 bitor 28 = 31
    ADD    Val224    ; 31 + 224 = 255
    STR    Test05

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test06: AND
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDR    Val007    ; 7 = 0b00000111
    AND    Val028    ; 28 = 0b00011100 | 7 bitand 28 = 4
    ADD    Val251    ; 4 + 251 = 255
    STR    Test06

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test07: NOT
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDR    Val007    ; 7 = 0b00000111
    NOT              ; bitnot 7 = 248
    ADD    Val007    ; 248 + 7 = 255
    STR    Test07

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test08: NOP, JMP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    NOP
    LDR    Val255
    JMP    JumpJMP   ; Pula próxima instrução
    LDR    Val007    ; Nunca executada

JumpJMP:    STR    Test08

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test09: JN
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDR    Val007
    JN     JumpJN1   ; Jump ignorado
    ADD    Val121    ; 7 + 121 = 128 (negativo)

JumpJN1:   JN    JumpJN2    ; Pula próxima instrução
    LDR    Val007    ; Nunca executada

JumpJN2:   ADD   Val127    ; 128 + 127 = 255
    STR    Test09

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test10: JZ
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDR    Val007
    JZ     JumpJZ1   ; Jump ignorado
    ADD    Val249    ; 7 + 249 = 0 (overflow)

JumpJZ1:  JZ    JumpJZ2    ; Pula próxima instrução
    LDR   Val007     ; Nunca executada

JumpJZ2:   ADD    Val255    ; 0 + 255 = 255
    STR    Test10

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test11: JC
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDR    Val127
    ADD    Val128     ; 127 + 128 = 255
    JC     JumpJC1    ; Jump ignorado
    ADD    Val128     ; 255 + 128 = 127 (carry)

JumpJC1:   JC    JumpJC2    ; Pula próxima instrução
    LDR    Val028     ; Nunca executada

JumpJC2:   ADD    Val128    ; 127 + 128 = 255
    STR    Test11

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test12: SHR
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDR    Val014
    SHR                ; shr(14) = 7 (carry = 0)
    JC     JumpSHR1    ; Jump ignorado
    SHR                ; shr(7) = 3 (carry = 1)

JumpSHR1:  JC    JumpSHR2    ; Pula próxima instrução
    LDR    Val028      ; Nunca executada

JumpSHR2:  ADD    Val252     ; 3 + 252 = 255
    STR    Test12

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test13: HLT
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDR    Val255
    STR    Test13
    HLT        ; O programa deve parar aqui
    LDR    Val007
    STR    Test13
